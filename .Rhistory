rm(data)
data_2014<-mutate(data_2014,GR_LY_Actual=data_2013$GR_TY_Actual[Index==paste(SAP_Hotel,Year,"2013",Month,Segment,sep="_")])
data_2014<-mutate(data_2014,GR_LY_Actual=data_2013$GR_TY_Actual["Index"==paste(SAP_Hotel,Year,"2013",Month,Segment,sep="_")])
data_2014<-mutate(data_2014,Index_LY=paste(SAP_Hotel,"2013",Month,Segment,sep="_"))
head(data_2014$Index_LY)
?cbind
data_2014<-mutate(data_2014,GR_LY_Actual=data_2013$GR_TY_Actual[Index==Index_LY])
data_2014<-mutate(data_2014,GR_LY_Actual=data_2013$GR_TY_Actual["Index"==Index_LY])
data_2014<-mutate(data_2014,GR_LY_Actual=data_2013$GR_TY_Actual["Index"=="Index_LY"])
data_2014<-mutate(data_2014,GR_LY_Actual=data_2013$GR_TY_Actual[[Index==Index_LY]])
?sapply
data_combined<-cbind(data_2014,data_2013[,4:9])
data_combined<-cbind(data_2014,data_2013[,4:11])
data_combined
tbl_df(data_combined)
data_combined
data_combined<-tbl_df(data_combined)
names(data_combined)
data_combined<-select(data_combined,-Index_LY)
data_combined<-select(data_combined,-12)
names(data_combined)
names(data_combined[,12])="GR_LY_Actual"
names(data_combined)
?mutate
select(data_combined,12="GR_LY_Actual")
?renaming
??renaming
?name
?names
data_combined
head(data_combined[,12])
names(data_combined)[12]<-"GR_LY_Actual"
data_combined
names(data_combined)[13]<-"GR_LY_Budget"
names(data_combined)[13]<-"RN_LY_Actual"
names(data_combined)[13]<-"RN_LY_Budget"
names(data_combined)[13]<-"GR_LY_Budget"
names(data_combined)[14]<-"RN_LY_Actual"
names(data_combined)[15]<-"RN_LY_Budget"
names(data_combined)[16]<-"RR_LY_Actual_LC"
names(data_combined)[17]<-"RR_LY_Budget_LC"
names(data_combined)[18]<-"Index_LY"
names(data_combined)
data_combined<-mutate(data_combined,Check=Index==Index_LY)
summarise(data_combined,Check)
?write.csv
write.csv(data_combined,file="./Combined 2013-2014.csv")
write.csv(data_combined,file="Combined 2013-2014.csv")
write.csv(data_combined,file="Combined 2013-2014.csv",row.names=F)
write.table(data_combined,file="Combined 2013-2014.csv",row.names=F,sep=",")
getwd()
write.csv(data_combined,file="./Combined 2013-2014.csv",row.names=F)
write.csv(data_combined,file="Combined 2013-2014.csv",row.names=F)
setwd("~")
getwd()
write.csv(data_combined,file="Combined 2013-2014.csv",row.names=F)
head(data_2013$Index)
data_combined<-cbind(data_2014,data_2013[,4:10])
data_2013[,4:10]
data_2013[,5:10]
data_2013[,5:11]
data_combined<-cbind(data_2014,data_2013[,5:11])
data_combined<-tbl_df(data_combined)
data_combined
names(data_combined)
head(data_combined[,19])
data_combined<-select(data_combined,-Index_LY)
names(data_combined)[12]<-"GR_LY_Actual"
names(data_combined)[13]<-"GR_LY_Budget"
names(data_combined)[14]<-"RN_LY_Actual"
names(data_combined)[15]<-"RN_LY_Budget"
names(data_combined)[16]<-"RR_LY_Actual_LC"
names(data_combined)[17]<-"RR_LY_Budget_LC"
names(data_combined)[18]<-"Index_LY"
data_combined<-cbind(data_combined,data_2014$Index_LY)
data_combined
data_combined<-tbl_df(data_combined)
data_combined
data_combined<-select(data_combined,-19)
data_combined
data_combined<-mutate(data_combined,Index_LY2=paste(SAP_Hotel,"2013",Month,Segment,sep="_"))
data_combined<-mutate(data_combined,Check=Index_LY==IndexLY2)
data_combined
data_combined<-mutate(data_combined,Check=Index_LY==Index_LY2)
write.csv(data_combined,file="Combined 2013-2014.csv",row.names=F)
names(data_2013)
names(data_2013)[5]<-"GR_LY_Actual"
names(data_2013)[6]<-"GR_LY_Budget"
names(data_2013)[7]<-"RN_LY_Actual"
names(data_2013)[8]<-"RN_LY_Budget"
names(data_2013)[9]<-"RR_LY_Actual_LC"
names(data_2013)[10]<-"RR_LY_Budget_LC"
names(data_2013)[11]<-"Index"
names(data_2013)[11]<-"Index_LY2"
data_2013
data_combined<-cbind(data_2014,data_2013[,5:11])
data_combined<-tbl_df(cbind(data_2014,data_2013[,5:11]))
data_combined
data_combined<-mutate(data_combined,Check=Index_LY==Index_LY2)
write.csv(data_combined,file="Combined 2013-2014.csv",row.names=F)
?rm
load("~/Documents - Work/MOOC Data Analytics Course/Class 3 - Getting and Cleaning Data/Quiz 3/.RData")
View(`q3.data1`)
q3.data1<-q3.data1[1:190,]
q3.data1
q3.data1<-tbl_df(q3.data1)
library(dplyr)
library(tidyr)
q3.data1<-tbl_df(q3.data1)
q3.data1
table(q3.data1$CountryCode %in% q3.data2$CountryCode)
q3.merged<-merge(q3.data1,q3.data2,by.x="CountryCode",by.y="CountryCode")
q3.merged<-merge(q3.data1,q3.data2,by.x="CountryCode",by.y="CountryCode",all=T)
q3.merged<-tbl_df(q3.merged)
q3.merged
?arrange
q3.merged<-arrange(q3.merged,desc(Ranking))
q3.merged
View(`q3.merged`)
q3.merged<-mutate(q3.merged, Ranking=as.numeric(Ranking))
q3.merged
View(`q3.merged`)
q3.merged<-merge(q3.data1,q3.data2,by.x="CountryCode",by.y="CountryCode")
q3.merged<-tbl_df(q3.merged)
q3.merged
class(q3.merged$Ranking)
q3.merged<-mutate(q3.merged, Ranking2=as.numeric(Ranking))
head(q3.merged$Ranking2)
View(`q3.merged`)
q3.merged<-merge(q3.data2,q3.data1,by.x="CountryCode",by.y="CountryCode")
q3.merged<-merge(q3.data2,q3.data1,by.x="CountryCode",by.y="CountryCode",all=T)
View(`q3.merged`)
q3.merged<-merge(q3.data1,q3.data2,by.x="CountryCode",by.y="CountryCode",all=T)
?subset
?!=
?is.na
?select
View(`q3.merged`)
View(`q3.merged`)
q3.merged<-filter(q3.merged,Ranking!=NA)
q3.merged<-merge(q3.data1,q3.data2,by.x="CountryCode",by.y="CountryCode",all=T)
??comparison
q3.merged<-filter(q3.merged,-is.na(Ranking))
q3.merged<-filter(q3.merged,!is.na(Ranking))
q3.merged<-tbl_df(q3.merged)
q3.merged
class(q3.merged$Ranking)
q3.cleaned<-mutate(q3.merged, Ranking2=as.numeric(Ranking))
q3.cleaned
View(`q3.cleaned`)
arrange(q3.merged,desc(Ranking))
q3.cleaned<-mutate(q3.merged, Ranking2=as.int(Ranking))
q3.cleaned<-mutate(q3.merged, Ranking2=as.integer(Ranking))
View(`q3.cleaned`)
q3.cleaned<-mutate(q3.merged, Ranking2=Ranking*1)
q3.cleaned<-mutate(q3.merged, Ranking2=Ranking+1)
q3.cleaned<-mutate(q3.merged, Ranking2=as.numeric(levels(Ranking))[Ranking])
q3.cleaned<-mutate(q3.merged, Ranking2=as.character(Ranking))
q3.cleaned<-mutate(q3.merged, Ranking2=as.numeric(Ranking2))
q3.cleaned<-mutate(q3.cleaned, Ranking2=as.numeric(Ranking2))
View(`q3.cleaned`)
View(`q3.merged`)
q3.cleaned<-arrange(q3.cleaned,desc(Ranking2))
head(q3.cleaned)
q3.cleaned[13,]
group_by
?group_by
View(`q3.cleaned`)
q3.cleaned<-group_by(q3.cleaned,Income.Group)
q3.cleaned
View(`q3.cleaned`)
View(`q3.cleaned`)
summarise(q3.cleaned,mean(Ranking))
View(`q3.merged`)
summarise(q3.cleaned,mean(Ranking2))
install.packages("Hmisc")
library(Hmisc)
q3.cleaned<-mutate(q3.cleaned,RankGroup=cut2(Ranking,g=5))
q3.cleaned<-mutate(q3.cleaned,RankGroup=cut2(Ranking2,g=5))
table(q3.cleaned$RankGroup,q3.cleaned$Income.Group)
?cut2
q3.cleaned<-select(q3.cleaned,-RankGroup)
View(`q3.cleaned`)
class(q3.cleaned$Ranking2)
q3.cleaned2<-mutate(q3.cleaned,RankGroup=cut2(Ranking2,g=5))
table(q3.cleaned2$RankGroup)
40+38+38+38+36
q3.cleaned2<-mutate(q3.cleaned,RankGroup=cut2(Ranking2,g=5,m=38))
table(q3.cleaned2$RankGroup)
q3.cleaned2<-mutate(q3.cleaned,RankGroup=cut2(Ranking2,m=38))
table(q3.cleaned2$RankGroup)
q3.cleaned2$RankGroup <- cut2(q3.cleaned2$Ranking2, g=5)
table(q3.cleaned2$RankGroup)
table(q3.cleaned2$RankGroup,q3.cleaned2$Income.Group)
library("dplyr")
library(lattice)
x<-rnorm(100)
y<-rnorm(100)
?xyplot
xyplot(x,y)
xyplot(y~x)
graph<-xyplot(y~x)
class(graph)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?panels
?axis
?lines
?text
?lpoints
?splom
?par
?trellis.par.set
library(ggplot2)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
?pnorm
pnorm(70, 80, 10)
qnorm(.95,1100,75)
sample <- rnorm(100, 1100, 75)
?table
summary(sample)
?percentile
??percentile
?quantile
quantile(sample, .95)
qnorm(.95,1100,7.5)
.5^4
pnorm(15,15,10/sqrt(100))
pbinom(3,size=5, prob=.5, lower.tail=F)
ppois(10,lambda=5*3)
pnorm(16,15,10/sqrt(100))
pnorm(16,15,10/sqrt(100))-pnorm(14,15,10/sqrt(100))
library(swirl)
swirl()
install_from_swirl("Statistical Inference")
swirl()
11/12
deeck
deck
52
4/52
0
12/52
2/51
?t
?t.test
1100 + c(-1,1) * qt(.95,9-1)*30/sqrt(9)
1100 + c(-1,1) * qt(.975,9-1)*30/sqrt(9)
?qt
dt(.95,8)
qt(.95,8)
sqrt(9)*(2)/qt(.95,8)
6/qt(.95,8)
qt(.05,8)
library(datasets)
data<-mtcars
mn<-mean(mpg)
mn<-mean(data$mpg)
s<-sd(data$mpg)
n<-nrow(data)
mn+c(-1,1)*qt(.95,n-1)*s/sqrt(n)
0+qt(.95,8)*1/sqrt(9)
t.test(mtcars$mpg)$conf.int)
t.test(mtcars$mpg)$conf.int
mn+c(-1,1)*qt(.975,n-1)*s/sqrt(n)
mn+c(-1,1)*qt(.95,n-1,lower.tail=F)*s/sqrt(n)
mn+c(-1,1)*qt(.95,n-1,lower.tail=T)*s/sqrt(n)
mn<-1100
s<-30
n<-9
mn+c(-1,1)*qt(.975,n-1)*s/sqrt(n)
mn<- -2
sqrt(n)*(0-mn)/qt(.975,n-1)
rm(ls())
?rm
rm(list=ls())
?ls
mn1<-4
mn1<-3
s1<-sqrt(.6)
rm(list=ls())
mn.new<-3
s.new<-sqrt(.6)
mn.old<-5
s.old<-sqrt(.68)
n.new<-10
n.old<-10
s.new^2
sp<-((n.new-1)*s.new^2+(n.old-1)*s.old^2)/(n.new+n.old+2)
mn.old-mn.new+c(-1,1)*qt(.975,n.new+n.old-2)*sp*(1/n.new+1/n.old)^.5
sp<-sqrt(sp)
mn.old-mn.new+c(-1,1)*qt(.975,n.new+n.old-2)*sp*(1/n.new+1/n.old)^.5
sp<-sqrt(((n.new-1)*s.new^2+(n.old-1)*s.old^2)/(n.new+n.old+2))
s.old^2
mn.new-mn.old+c(-1,1)*qt(.975,n.new+n.old-2)*sp*(1/n.new+1/n.old)^.5
sp<-sqrt(((n.new-1)*s.new^2+(n.old-1)*s.old^2)/(n.new+n.old-2))
mn.new-mn.old+c(-1,1)*qt(.975,n.new+n.old-2)*sp*(1/n.new+1/n.old)^.5
?zt
?qnorm
n.new<-100
n.old<-100
mn<-4
rm(mn)
mn.new<-4
s.new<-0.5
mn.old<-6
s.old<-2
mn.new<--3
mn.old<-1
n.new<-9
n.old<-9
s.new<-1.5
s.old<-1.8
sp<-sqrt(((n.new-1)*s.new^2+(n.old-1)*s.old^2)/(n.new+n.old-2))
mn.new-mn.old+c(-1,1)*qt(.95,n.new+n.old-2)*sp*(1/n.new+1/n.old)^.5
mn.new<-100
mn.old<-100
n.new<-100
n.old<-100
mn.new<-4
s.new<-0.5
mn.old<-6
s.old<-2
sp<-sqrt(((n.new-1)*s.new^2+(n.old-1)*s.old^2)/(n.new+n.old-2))
df<-(s.old^2/n.old+s.new^2/n.new)^2/((s.old^2/n.old)^2/(n.old-1)+(s.new^2/n.new)^2/(n.new-1))
mn.new-mn.old*c(-1,1)*qt(.975,df)*(s.old^2/n.old+s.new^2/n.new)^.5
mn.old-mn.new*c(-1,1)*qt(.975,df)*(s.old^2/n.old+s.new^2/n.new)^.5
debugSource('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
getwd()
setwd("./")
getwd()
dir
?dir
?path
??path
?dirname
?sys.frame
?data.url
?script.dir
source('~/.active-rstudio-document')
source('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
source('~/.active-rstudio-document')
source('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
source('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
source('~/.active-rstudio-document')
source('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
source('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
source('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
?paste
source('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
?file.exists
?file.access
?dir
list.dirs
list.dirs()
getwd()
setwd("~/GitHub/Class-5-Peer-Assessment-2")
list.dirs()
getwd()
getwd("./")
getwd(path="./")
getwd(path=".")
list.dirs("./")
list.files(, pattern = "repdata-data-StormData.csv.bz2", recursive = T)
list.files(, pattern = "repdata-data-StormData.csv.bz2", recursive = T)
list.files(, pattern = "repdata-data-StormData.csv.bz2", recursive = T) == ""
list.files(, pattern = "repdata-data-StormData.csv.bz2", recursive = T) == NA
length(list.files(, pattern = "repdata-data-StormData.csv.bz2", recursive = T)) == 0
?exists
source('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
source('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
source('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
?file.path
?data.path
source('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
source('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
?data.copy
data.copy <- data.raw
data.copy$BGN_DATE <- mdy(data.copy$BGN_DATE)
View(data.copy)
data.copy<-data.raw
?left
??substring
substr(data.copy$BGN_DATE[[1]],1,10)
?instr
substr(data.copy$BGN_DATE[[1]],1," ")
substr(data.copy$BGN_DATE[[1]],1,stop=" ")
require(lubridate)
require("lubridate")
mdy(data.copy$BGN_DATE)
mdy(data.copy$BGN_DATE[[1]])
?as.date
?as.Date
mdy_hms(data.copy$BGN_DATE[[1]])
?mdy_hms
mdy_hms(data.copy$BGN_DATE[[1]], tz = data.copy$TIME_ZONE[[1]])
View(data.copy)
summary(data.copy$TIME_ZONE)
table(data.copy$TIME_ZONE)
?tz
require(ggplot2)
?summarise
group_by(data.copy, EVTYPE)
summarise(data.copy, sum(FATALITIES), sum(INJURIES))
data.raw<-tbl_df(data.raw)
data.raw
data.health <- data.raw %>%
group_by(EVTYPE) %>%
summarise(sum(FATALITIES), sum(INJURIES))
rm(data.copy)
View(data.health)
?tolower
?gsub
View(data.raw)
?"else if"
??else if
??"else if"
"?else if"
?else
?"else"
data.damage <- data.raw %>%
group_by(EVTYPE) %>%
summarise(deaths = mean(FATALITIES),
injuries = mean(INJURIES))
View(data.damage)
rm(data.health)
View(data.damage)
rm(data.damage)
data.damage <- data.raw %>%
group_by(EVTYPE) %>%
summarise(deaths = mean(FATALITIES),
injuries = mean(INJURIES))
View(data.damage)
summary(data.damage$deaths)
summary(data.damage$injuries)
?median
?roudn
?round
data.copy<-data.raw
data.damage <- data.copy %>%
group_by(EVTYPE) %>%
summarise(deaths = round(mean(FATALITIES)),
injuries = round(mean(INJURIES)))
summary(data.damage)
data.damage$deaths <- round(data.damage$deaths)
data.damage$injuries <- round(data.damage$injuries)
summary(data.damage)
data.copy <- mutate(data.copy, econdmg = sum(PROPDMG, CROPDMG))
data.damage <- data.copy %>%
group_by(EVTYPE) %>%
summarise(deaths = round(mean(FATALITIES)),
injuries = round(mean(INJURIES)),
economic = round(mean(econdmg)))
View(data.damage)
i <- 1
for (i in 1:nrow(data.copy)) {
if (data.copy$PROPDMGEXP[[i]] == "K") {
data.copy$PROPDMG[[i]] <- data.copy$PROPDMG[[i]] * 1000
} else if data.copy$PROPDMGEXP[[i]] == "M") {
data.copy$PROPDMG[[i]] <- data.copy$PROPDMG[[i]] * 1000000
} else if data.copy$PROPDMGEXP[[i]] == "B") {
data.copy$PROPDMG[[i]] <- data.copy$PROPDMG[[i]] * 1000000000
}
if (data.copy$CROPDMGEXP[[i]] == "K") {
data.copy$CROPDMG[[i]] <- data.copy$CROPDMG[[i]] * 1000
} else if data.copy$CROPDMGEXP[[i]] == "M") {
data.copy$CROPDMG[[i]] <- data.copy$CROPDMG[[i]] * 1000000
} else if data.copy$CROPDMGEXP[[i]] == "B") {
data.copy$CROPDMG[[i]] <- data.copy$CROPDMG[[i]] * 1000000000
}
}
data.copy<-data.raw
i <- 1
for (i in 1:nrow(data.copy)) {
if (data.copy$PROPDMGEXP[[i]] == "K") {
data.copy$PROPDMG[[i]] <- data.copy$PROPDMG[[i]] * 1000
} else if (data.copy$PROPDMGEXP[[i]] == "M") {
data.copy$PROPDMG[[i]] <- data.copy$PROPDMG[[i]] * 1000000
} else if (data.copy$PROPDMGEXP[[i]] == "B") {
data.copy$PROPDMG[[i]] <- data.copy$PROPDMG[[i]] * 1000000000
}
if (data.copy$CROPDMGEXP[[i]] == "K") {
data.copy$CROPDMG[[i]] <- data.copy$CROPDMG[[i]] * 1000
} else if (data.copy$CROPDMGEXP[[i]] == "M") {
data.copy$CROPDMG[[i]] <- data.copy$CROPDMG[[i]] * 1000000
} else if (data.copy$CROPDMGEXP[[i]] == "B") {
data.copy$CROPDMG[[i]] <- data.copy$CROPDMG[[i]] * 1000000000
}
}
rm(data.copy)
rm(data.damage)
debugSource('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
debugSource('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
grepl("\-","lala-")
grepl(\-,"lala-")
grepl("\\-","lala-")
debugSource('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
debugSource('~/GitHub/Class-5-Peer-Assessment-2/C5-PA2_Scripting.R')
dirname(sys.frame(1)$ofile)
?sys.frame
sys.frames()
rm(source_local)
sys.frame()$ofile
